<?xml version="1.0" ?>
<!-- 
  Copyright (C) 2020  Rhys Mainwaring

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->

<!-- Gazebo elements for the rs750 robot model
 -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <!-- Rig -->
    <xacro:include filename="$(find rs750_description)/urdf/rs750_rig.gazebo"/>

    <gazebo>
        <!-- ROS control -->
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
            <legacyModeNS>false</legacyModeNS>
        </plugin>

        <!-- Joint state publisher -->
        <!-- <plugin name="gazebo_ros_joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
            <robotNamespace>/</robotNamespace>
            <jointName>
                main_sail_joint, fore_sail_joint
            </jointName>
            <updateRate>50</updateRate>
            <alwaysOn>true</alwaysOn>
        </plugin> -->

        <!-- Hydrodynamics plugin -->
        <plugin name="hydrodynamics" filename="libHydrodynamicsPlugin.so">
            <!-- Wave Model -->
            <wave_model>ocean</wave_model>

            <!-- Hydrodynamics -->
            <damping_on>true</damping_on>
            <viscous_drag_on>true</viscous_drag_on>
            <pressure_drag_on>true</pressure_drag_on>

            <!-- Markers -->
            <markers>
                <update_rate>30</update_rate>
                <water_patch>false</water_patch>
                <waterline>false</waterline>
                <underwater_surface>false</underwater_surface>
            </markers>
        </plugin>

      <!-- Foil plugins  -->
        <plugin name="keel_fin_liftdrag" filename="libFoilPlugin.so">
            <a0>0.0</a0>
            <cla>6.2832</cla>
            <alpha_stall>0.1592</alpha_stall>
            <cla_stall>-0.7083</cla_stall>
            <cda>0.63662</cda>
            <area>0.17</area>
            <fluid_density>1000</fluid_density>
            <forward>1 0 0</forward>
            <upward>0 1 0</upward>
            <cp>0 0 0</cp>
            <link_name>keel_fin_link</link_name>
            <radial_symmetry>true</radial_symmetry>
            <topic>lift_drag</topic>
        </plugin>
       
        <plugin name="rudder_liftdrag" filename="libFoilPlugin.so">
            <a0>0.0</a0>
            <cla>6.2832</cla>
            <alpha_stall>0.1592</alpha_stall>
            <cla_stall>-0.7083</cla_stall>
            <cda>0.63662</cda>
            <area>0.12</area>
            <fluid_density>1000</fluid_density>
            <forward>1 0 0</forward>
            <upward>0 1 0</upward>
            <cp>-0.06 0 -0.2</cp>
            <link_name>rudder_link</link_name>
            <radial_symmetry>true</radial_symmetry>
            <topic>lift_drag</topic>
        </plugin>
    </gazebo>

  <!-- Camera Sensor -->
  <!-- <gazebo reference="cam_link">
    <sensor type="camera" name="camera1">
      <always_on>1</always_on>>
      <update_rate>30.0</update_rate>
      <camera name="camera1">
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>bbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>cam_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo> -->

  <!-- Ray Sensor -->
  <!-- <gazebo reference="ray_link">
    <sensor type="gpu_ray" name="ray1">
      <always_on>1</always_on>>
      <update_rate>40.0</update_rate>
      <visualize>true</visualize>
      <ray name="ray1">
        <scan>
          <horizontal>
            <samples>640</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
          <vertical>
            <samples>1</samples>
            <resolution>1</resolution>
            <min_angle>0</min_angle>
            <max_angle>0</max_angle>
          </vertical>

        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin name="ray_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/bbot/laser/scan</topicName>
        <frameName>ray_link</frameName>
      </plugin>
    </sensor>
  </gazebo> -->

  <!-- GPS Sensor -->
  <!-- <gazebo reference="gps_link">
    <sensor type="gps" name="gps1">
      <always_on>1</always_on>>
      <update_rate>100.0</update_rate>
      <visualize>true</visualize>
      <gps name="gps1">
      </gps>
    </sensor>
  </gazebo> -->



</robot>
