<?xml version="1.0" ?>
<!-- 
    Software License Agreement (BSD-3-Clause)

    Copyright (c) 2020 Rhys Mainwaring
    All rights reserved.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:

    1.  Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

    2.  Redistributions in binary form must reproduce the above
        copyright notice, this list of conditions and the following
        disclaimer in the documentation and/or other materials provided
        with the distribution.

    3.  Neither the name of the copyright holder nor the names of its
        contributors may be used to endorse or promote products derived
        from this software without specific prior written permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
    ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
    POSSIBILITY OF SUCH DAMAGE.
-->

<!-- Robot description for a RS750 test rig

    Conventions    
    ROS REP 105 Coordinate Frames for Mobile Platforms
    length      x-axis dimension
    width       y-axis dimension
    depth       z-axis dimension

 -->
<robot name="rs750_test_rig" xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:include filename="$(find rs750_description)/urdf/rs750_materials.xacro"/>
    <xacro:include filename="$(find rs750_description)/urdf/rs750_inertials.xacro"/>
    <xacro:include filename="$(find rs750_description)/urdf/rs750_anemometer.xacro"/>
    <xacro:include filename="$(find rs750_description)/urdf/rs750_imu.xacro"/>
    <xacro:include filename="$(find rs750_description)/urdf/rs750_magnetic.xacro"/>
    <xacro:include filename="$(find rs750_description)/urdf/rs750_rig.xacro"/>
    <xacro:include filename="$(find rs750_description)/urdf/rs750_test_rig.gazebo"/>

    <!-- Constants for robot dimensions -->
    <xacro:property name="scale" value="3.2" />

    <xacro:property name="base_plate_mass" value="${100 * scale * scale * scale}" />
    <xacro:property name="base_plate_length" value="${0.10 * scale}" />
    <xacro:property name="base_plate_radius" value="${0.50 * scale}" /> 

    <!-- The base link - the reference link for the entire model -->
    <link name="base_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <box size="0.01 0.01 0.01"/>
            </geometry>
        </collision>
        <!-- Remove inertial in base_link:
            [ WARN ] The root link base_link has an inertia specified in the URDF,
            but KDL does not support a root link with an inertia.
            As a workaround, you can add an extra dummy link to your URDF.
        -->
        <!--
        <xacro:solid_cuboid_inertial 
            rpy="0 0 0" xyz="0 0 0"
            mass="0.01"
            x="0.01" y="0.01" z="0.01" />
        -->
    </link>

    <gazebo reference="base_link">
        <material>Gazebo/Orange</material>
    </gazebo>

    <!-- Deck plate  -->
    <link name="base_plate_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="${base_plate_length}" radius="${base_plate_radius}" />
            </geometry>
            <material name="red" />
        </visual>

        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <cylinder length="${base_plate_length}" radius="${base_plate_radius}" />
            </geometry>
        </collision>
        <xacro:solid_cylinder_inertial 
            rpy="0 0 0" xyz="0 0 0"
            mass="${base_plate_mass}"
            length="${base_plate_length}" radius="${base_plate_radius}" />
    </link>

    <gazebo reference="base_plate_link">
        <material>Gazebo/Red</material>
    </gazebo>

    <joint name="base_plate_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 ${base_plate_length/2}"/>
        <parent link="base_link" />
        <child link="base_plate_link" />
    </joint>

    <gazebo reference="base_plate_joint">
    </gazebo>

    <!-- Rig -->
    <xacro:rig base_link="base_link" scale="${scale}" x="0.0" y="0.0" z="${base_plate_length/2}" />

    <!-- Anemometer (mast head) -->
    <xacro:anemometer_link />
    <xacro:anemometer_joint x="0.0" y="0.0" z="${base_plate_length + 4.0}" yaw="0" />

    <!-- IMU  -->
    <xacro:imu_link />
    <xacro:imu_joint x="0.0" y="0.0" z="${base_plate_length}" yaw="0" />

    <!-- Magnetometer  -->
    <xacro:magnetic_link />
    <xacro:magnetic_joint x="0.0" y="0.0" z="${base_plate_length}" yaw="0" />

</robot>